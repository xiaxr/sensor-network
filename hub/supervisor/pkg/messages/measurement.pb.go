// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: measurement.proto

package messages

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Measurement_MeasurementType int32

const (
	Measurement_NONE        Measurement_MeasurementType = 0
	Measurement_TEMPERATURE Measurement_MeasurementType = 1
	Measurement_HUMIDITY    Measurement_MeasurementType = 2
	Measurement_PRESSURE    Measurement_MeasurementType = 3
	Measurement_ALTITUDE    Measurement_MeasurementType = 4
)

// Enum value maps for Measurement_MeasurementType.
var (
	Measurement_MeasurementType_name = map[int32]string{
		0: "NONE",
		1: "TEMPERATURE",
		2: "HUMIDITY",
		3: "PRESSURE",
		4: "ALTITUDE",
	}
	Measurement_MeasurementType_value = map[string]int32{
		"NONE":        0,
		"TEMPERATURE": 1,
		"HUMIDITY":    2,
		"PRESSURE":    3,
		"ALTITUDE":    4,
	}
)

func (x Measurement_MeasurementType) Enum() *Measurement_MeasurementType {
	p := new(Measurement_MeasurementType)
	*p = x
	return p
}

func (x Measurement_MeasurementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Measurement_MeasurementType) Descriptor() protoreflect.EnumDescriptor {
	return file_measurement_proto_enumTypes[0].Descriptor()
}

func (Measurement_MeasurementType) Type() protoreflect.EnumType {
	return &file_measurement_proto_enumTypes[0]
}

func (x Measurement_MeasurementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Measurement_MeasurementType.Descriptor instead.
func (Measurement_MeasurementType) EnumDescriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{0, 0}
}

type Measurement_MeasurementUnit int32

const (
	Measurement_NO_UNIT              Measurement_MeasurementUnit = 0
	Measurement_CELSIUS              Measurement_MeasurementUnit = 1
	Measurement_RELATIVE_HUMIDITY    Measurement_MeasurementUnit = 16
	Measurement_PASCALS              Measurement_MeasurementUnit = 32
	Measurement_METERS               Measurement_MeasurementUnit = 48
	Measurement_DECIBEL              Measurement_MeasurementUnit = 64
	Measurement_METERS_PER_SECOND    Measurement_MeasurementUnit = 80
	Measurement_GRAVITY_UNIT         Measurement_MeasurementUnit = 81
	Measurement_PARTS_PER_MILLION    Measurement_MeasurementUnit = 96
	Measurement_GRAM_PER_CUBIC_METER Measurement_MeasurementUnit = 97
	Measurement_VOLT                 Measurement_MeasurementUnit = 112
	Measurement_AMP                  Measurement_MeasurementUnit = 113
	Measurement_WATT                 Measurement_MeasurementUnit = 114
	Measurement_LUMENS               Measurement_MeasurementUnit = 128
	Measurement_NEWTONS              Measurement_MeasurementUnit = 144
	Measurement_GRAM                 Measurement_MeasurementUnit = 160
)

// Enum value maps for Measurement_MeasurementUnit.
var (
	Measurement_MeasurementUnit_name = map[int32]string{
		0:   "NO_UNIT",
		1:   "CELSIUS",
		16:  "RELATIVE_HUMIDITY",
		32:  "PASCALS",
		48:  "METERS",
		64:  "DECIBEL",
		80:  "METERS_PER_SECOND",
		81:  "GRAVITY_UNIT",
		96:  "PARTS_PER_MILLION",
		97:  "GRAM_PER_CUBIC_METER",
		112: "VOLT",
		113: "AMP",
		114: "WATT",
		128: "LUMENS",
		144: "NEWTONS",
		160: "GRAM",
	}
	Measurement_MeasurementUnit_value = map[string]int32{
		"NO_UNIT":              0,
		"CELSIUS":              1,
		"RELATIVE_HUMIDITY":    16,
		"PASCALS":              32,
		"METERS":               48,
		"DECIBEL":              64,
		"METERS_PER_SECOND":    80,
		"GRAVITY_UNIT":         81,
		"PARTS_PER_MILLION":    96,
		"GRAM_PER_CUBIC_METER": 97,
		"VOLT":                 112,
		"AMP":                  113,
		"WATT":                 114,
		"LUMENS":               128,
		"NEWTONS":              144,
		"GRAM":                 160,
	}
)

func (x Measurement_MeasurementUnit) Enum() *Measurement_MeasurementUnit {
	p := new(Measurement_MeasurementUnit)
	*p = x
	return p
}

func (x Measurement_MeasurementUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Measurement_MeasurementUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_measurement_proto_enumTypes[1].Descriptor()
}

func (Measurement_MeasurementUnit) Type() protoreflect.EnumType {
	return &file_measurement_proto_enumTypes[1]
}

func (x Measurement_MeasurementUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Measurement_MeasurementUnit.Descriptor instead.
func (Measurement_MeasurementUnit) EnumDescriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{0, 1}
}

type Measurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp       *timestamppb.Timestamp      `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceId        uint64                      `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Id              uint32                      `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	MeasurementType Measurement_MeasurementType `protobuf:"varint,4,opt,name=measurement_type,json=measurementType,proto3,enum=xiaxr.hub.Measurement_MeasurementType" json:"measurement_type,omitempty"`
	MeasurementUnit Measurement_MeasurementUnit `protobuf:"varint,5,opt,name=measurement_unit,json=measurementUnit,proto3,enum=xiaxr.hub.Measurement_MeasurementUnit" json:"measurement_unit,omitempty"`
	Value           float64                     `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Measurement) Reset() {
	*x = Measurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measurement) ProtoMessage() {}

func (x *Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measurement.ProtoReflect.Descriptor instead.
func (*Measurement) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{0}
}

func (x *Measurement) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Measurement) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Measurement) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Measurement) GetMeasurementType() Measurement_MeasurementType {
	if x != nil {
		return x.MeasurementType
	}
	return Measurement_NONE
}

func (x *Measurement) GetMeasurementUnit() Measurement_MeasurementUnit {
	if x != nil {
		return x.MeasurementUnit
	}
	return Measurement_NO_UNIT
}

func (x *Measurement) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type MeasurementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Received bool    `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	Error    *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *MeasurementResponse) Reset() {
	*x = MeasurementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementResponse) ProtoMessage() {}

func (x *MeasurementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementResponse.ProtoReflect.Descriptor instead.
func (*MeasurementResponse) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{1}
}

func (x *MeasurementResponse) GetReceived() bool {
	if x != nil {
		return x.Received
	}
	return false
}

func (x *MeasurementResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type HeartBeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sent  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=sent,proto3" json:"sent,omitempty"`
	Error *string                `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *HeartBeatRequest) Reset() {
	*x = HeartBeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRequest) ProtoMessage() {}

func (x *HeartBeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRequest.ProtoReflect.Descriptor instead.
func (*HeartBeatRequest) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{2}
}

func (x *HeartBeatRequest) GetSent() *timestamppb.Timestamp {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *HeartBeatRequest) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type HeartBeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sent     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=sent,proto3" json:"sent,omitempty"`
	Received *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=received,proto3" json:"received,omitempty"`
	Error    *string                `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *HeartBeatResponse) Reset() {
	*x = HeartBeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatResponse) ProtoMessage() {}

func (x *HeartBeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatResponse.ProtoReflect.Descriptor instead.
func (*HeartBeatResponse) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{3}
}

func (x *HeartBeatResponse) GetSent() *timestamppb.Timestamp {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *HeartBeatResponse) GetReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.Received
	}
	return nil
}

func (x *HeartBeatResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

var File_measurement_proto protoreflect.FileDescriptor

var file_measurement_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x78, 0x69, 0x61, 0x78, 0x72, 0x2e, 0x68, 0x75, 0x62, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x90, 0x05, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x78, 0x69, 0x61, 0x78, 0x72, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x78, 0x69, 0x61, 0x78, 0x72, 0x2e, 0x68, 0x75, 0x62, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0f, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x56, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x48, 0x55, 0x4d, 0x49, 0x44, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x4c, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45, 0x10, 0x04, 0x22, 0x85, 0x02, 0x0a, 0x0f, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0b,
	0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x45, 0x4c, 0x53, 0x49, 0x55, 0x53, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x4c, 0x41,
	0x54, 0x49, 0x56, 0x45, 0x5f, 0x48, 0x55, 0x4d, 0x49, 0x44, 0x49, 0x54, 0x59, 0x10, 0x10, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x41, 0x53, 0x43, 0x41, 0x4c, 0x53, 0x10, 0x20, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x30, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x43, 0x49,
	0x42, 0x45, 0x4c, 0x10, 0x40, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x5f,
	0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x50, 0x12, 0x10, 0x0a, 0x0c,
	0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x10, 0x51, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x41, 0x52, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x49, 0x4c, 0x4c,
	0x49, 0x4f, 0x4e, 0x10, 0x60, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x45,
	0x52, 0x5f, 0x43, 0x55, 0x42, 0x49, 0x43, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x61, 0x12,
	0x08, 0x0a, 0x04, 0x56, 0x4f, 0x4c, 0x54, 0x10, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d, 0x50,
	0x10, 0x71, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x54, 0x54, 0x10, 0x72, 0x12, 0x0b, 0x0a, 0x06,
	0x4c, 0x55, 0x4d, 0x45, 0x4e, 0x53, 0x10, 0x80, 0x01, 0x12, 0x0c, 0x0a, 0x07, 0x4e, 0x45, 0x57,
	0x54, 0x4f, 0x4e, 0x53, 0x10, 0x90, 0x01, 0x12, 0x09, 0x0a, 0x04, 0x47, 0x52, 0x41, 0x4d, 0x10,
	0xa0, 0x01, 0x22, 0x56, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x10, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xab, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x78,
	0x69, 0x61, 0x78, 0x72, 0x2e, 0x68, 0x75, 0x62, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x69, 0x61, 0x78, 0x72, 0x2e, 0x68, 0x75, 0x62,
	0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x74, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x1b, 0x2e, 0x78, 0x69, 0x61, 0x78, 0x72, 0x2e,
	0x68, 0x75, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x78, 0x69, 0x61, 0x78, 0x72, 0x2e, 0x68, 0x75, 0x62,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_measurement_proto_rawDescOnce sync.Once
	file_measurement_proto_rawDescData = file_measurement_proto_rawDesc
)

func file_measurement_proto_rawDescGZIP() []byte {
	file_measurement_proto_rawDescOnce.Do(func() {
		file_measurement_proto_rawDescData = protoimpl.X.CompressGZIP(file_measurement_proto_rawDescData)
	})
	return file_measurement_proto_rawDescData
}

var file_measurement_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_measurement_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_measurement_proto_goTypes = []interface{}{
	(Measurement_MeasurementType)(0), // 0: xiaxr.hub.Measurement.MeasurementType
	(Measurement_MeasurementUnit)(0), // 1: xiaxr.hub.Measurement.MeasurementUnit
	(*Measurement)(nil),              // 2: xiaxr.hub.Measurement
	(*MeasurementResponse)(nil),      // 3: xiaxr.hub.MeasurementResponse
	(*HeartBeatRequest)(nil),         // 4: xiaxr.hub.HeartBeatRequest
	(*HeartBeatResponse)(nil),        // 5: xiaxr.hub.HeartBeatResponse
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
}
var file_measurement_proto_depIdxs = []int32{
	6, // 0: xiaxr.hub.Measurement.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: xiaxr.hub.Measurement.measurement_type:type_name -> xiaxr.hub.Measurement.MeasurementType
	1, // 2: xiaxr.hub.Measurement.measurement_unit:type_name -> xiaxr.hub.Measurement.MeasurementUnit
	6, // 3: xiaxr.hub.HeartBeatRequest.sent:type_name -> google.protobuf.Timestamp
	6, // 4: xiaxr.hub.HeartBeatResponse.sent:type_name -> google.protobuf.Timestamp
	6, // 5: xiaxr.hub.HeartBeatResponse.received:type_name -> google.protobuf.Timestamp
	2, // 6: xiaxr.hub.MessageManager.SendMeasurement:input_type -> xiaxr.hub.Measurement
	4, // 7: xiaxr.hub.MessageManager.SentHeartBeat:input_type -> xiaxr.hub.HeartBeatRequest
	3, // 8: xiaxr.hub.MessageManager.SendMeasurement:output_type -> xiaxr.hub.MeasurementResponse
	5, // 9: xiaxr.hub.MessageManager.SentHeartBeat:output_type -> xiaxr.hub.HeartBeatResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_measurement_proto_init() }
func file_measurement_proto_init() {
	if File_measurement_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_measurement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_measurement_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_measurement_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_measurement_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_measurement_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_measurement_proto_goTypes,
		DependencyIndexes: file_measurement_proto_depIdxs,
		EnumInfos:         file_measurement_proto_enumTypes,
		MessageInfos:      file_measurement_proto_msgTypes,
	}.Build()
	File_measurement_proto = out.File
	file_measurement_proto_rawDesc = nil
	file_measurement_proto_goTypes = nil
	file_measurement_proto_depIdxs = nil
}
